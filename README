streamdevice Module Description (copied from streamdevice webpage):
StreamDevice is a generic EPICS device support for devices with a "byte stream" based communication interface. That means devices that can be controlled by sending and receiving strings (in the broadest sense, including non-printable characters and even null-bytes). Examples for this type of communication interface are serial line (RS-232, RS-485, ...), IEEE-488 (also known as GPIB or HP-IB), and TCP/IP. StreamDevice comes with an interface to asynDriver, which implements the low-level support for those communication interfaces. But it can be extended to support other bus drivers. 

Author:
Dirk Zimoch (dirk.zimoch@psi.ch)

Webpage:
http://epics.web.psi.ch/software/streamdevice/

Online Documentation:
http://epics.web.psi.ch/software/streamdevice/doc/


Instructions for using the streamdevice module in an EPICS IOC (copied from web documentation):

To use StreamDevice, your application must be built with the asyn and stream libraries and must load asyn.dbd and stream.dbd. 

Include the following lines in your application Makefile: 

PROD_LIBS += stream
PROD_LIBS += asyn
Include the following lines in your xxxAppInclude.dbd file to use stream and asyn with serial lines and IP sockets: 

include "base.dbd"
include "stream.dbd"
include "asyn.dbd"
registrar(drvAsynIPPortRegisterCommands)
registrar(drvAsynSerialPortRegisterCommands)
You can find an example application in the streamApp subdirectory. 
 
